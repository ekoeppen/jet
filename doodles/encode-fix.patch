--- /home/jcw/encode-orig.go	2015-01-15 09:17:07.284375527 +0100
+++ encode.go	2015-01-15 09:22:26.188365667 +0100
@@ -7,7 +7,7 @@
 	"encoding"
 	"io"
 	"reflect"
-	"sync"
+	////"sync"
 )
 
 const (
@@ -471,7 +471,8 @@
 
 	var rvals []reflect.Value
 	var encnames []string
-	var pool *sync.Pool
+	////var pool *sync.Pool
+	var pool *fakePool
 	var poolv interface{}
 	idxpool := newlen / 8
 	if encStructPoolLen != 4 {
@@ -1113,6 +1114,22 @@
 
 // ----------------------------------------
 
+type fakePool struct {
+	New func() interface{}
+}
+
+func (p *fakePool) Get() interface{} {
+	if p.New != nil {
+		return p.New()
+	}
+	return nil
+}
+
+func (p *fakePool) Put(v interface{}) {
+}
+
+// ----------------------------------------
+
 const encStructPoolLen = 4
 
 // encStructPool is an array of sync.Pool.
@@ -1124,7 +1141,8 @@
 // This shared pool reduces the amount of unnecessary creation we do.
 // The cost is that of locking sometimes, but sync.Pool is efficient
 // enough to reduce thread contention.
-var encStructPool [encStructPoolLen]sync.Pool
+////var encStructPool [encStructPoolLen]sync.Pool
+var encStructPool [encStructPoolLen]fakePool
 
 type encStructPool8 struct {
 	r [8]reflect.Value
